{
  "hash": "5851fcb2d61fae7817c16f7d9673ecc7",
  "result": {
    "markdown": "---\ntitle: \"RMarkdown basics\"\ndescription: |\n  The basics of RMarkdown\nauthor: \"Siobhon Egan\"\ndate: \"2021-02-13\"\ncategories: [rstudio, rmarkdown]\n---\n\n\nðŸ”— **Links**\n\n-   [RStudio Markdown Basics](https://rmarkdown.rstudio.com/authoring_basics.html)\n-   [tutorial here](https://ourcodingclub.github.io/tutorials/rmarkdown/), [homepage here](https://ourcodingclub.github.io/tutorials.html)\n-   [RMarkdown overview/references](https://rmarkdown.rstudio.com/docs/)\n-   [Bookdown - rmarkdown syntax](https://bookdown.org/yihui/rmarkdown/markdown-syntax.html)\n\n**Italics**\n\nCan be produced by either `_text1_` or `*text1*` which will look this *text1* or *text2*.\n\n**Bold**\n\nProduced using a pair of double asterisks `**text3**` or `__text4__` which will look like this **text3** or **text4**.\n\n**Headers**\n\n```r\n# Header 1\n## Header 2\n### Header 3\netc...\n```\n\n**Numbered list**\n\n```r\n1.  Item 1\n2.  Item 2\n3.  Item 3\n    -   part a\n    -   part b\n```\n\n**Unnumbered list**\n\n```r\n* Item 1\n* Item 2\n* Item 3\n    + part a\n    + part b\n```\n\n**Script**\n\nA pair of tildes (`~`) turn text to a subscript (e.g., `H~3~PO~4~` renders H~3~PO~4~). A pair of carets (`^`) produce a superscript (e.g., `Cu^2+^` renders Cu^2+^). To get strike through `~~strike~~` renders to this ~~strike~~\n\n**Images**\n\n```r\n![](http://example.com/logo.png)\n![optional caption text](figures/img.png)\n```\n\n**Hyperlinks**\n\n```r\n[linked phrase](http://example.com)\n```\n\n**Horizontal rule**\n\nThree or more asterisks or dashes `***` or `---`\n\n**Tables**\n\n```r\nFirst Header  | Second Header\n------------- | -------------\nContent Cell  | Content Cell\nContent Cell  | Content Cell\n```\n\n### Math and symbols\n\n[Math in RMarkdown](https://www.calvin.edu/~rpruim/courses/s341/S17/from-class/MathinRmd.html)\n\n`$x = y $` \\$x = y \\$ `$x < y $` \\$x \\< y \\$ `$x \\le y $` \\$x \\le y \\$ `$x^{n}$` $x^{n}$ `$\\hat{x}$` $\\hat{x}$ `$\\tilde{x}$` $\\tilde{x}$ `$\\frac{a}{b}$` $\\frac{a}{b}$ `$\\mu M$` $\\mu M$ `$\\alpha A$` $\\alpha A$ `$\\beta B$` $\\beta B$ `$\\pi \\Pi$` $\\pi \\Pi$ `$^\\circ C$` $^\\circ C$\n\n## Code chunks & output\n\nResource link [here](https://bookdown.org/yihui/rmarkdown-cookbook/hide-one.html)\n\n## Text colour\n\nBelow are some useful bits of code that you can use to change font. For basic Rmd syntax see official [Reference Guide](https://rstudio.com/wp-content/uploads/2015/03/rmarkdown-reference.pdf?_ga=2.203245073.1802232962.1587452707-209816525.1575608236).\n\nIt is also handy to have colour guides/convertors at the ready, checkout the my section on colour in [Plot Aesthetics & Colour](https://siobhon-egan.github.io/bioinfo-phylo/rstudio-aesthetics.html#colour).\n\n### For `Rmd` -> `PDF` docs\n\n**Font colour**\n\nThe quickest option is this `\\textcolor{olive}{This text is olive}`. It will look like this \"[This text is olive]{style=\"color: olive;\"}\" in your PDF document.\n\nIf you want a more customisable option you can use the following to first choose your font colour, and then apply it. Define text colour (this won't appear in your Knitted PDF)\n\n```r\n\\definecolor{fancyTextColor}{HTML}{FF0000}\n```\n\nThen use the following syntax to change font colour `\\colorbox{hightlightColor}{This text is red}` It will look like this \"[This text is red]{style=\"color: red;\"}\" in your PDF document.\n\n### For `Rmd` -\\> `html` docs\n\n**Font colour and text**\n\nthe following html code\n\n`Roses are <span style=\"color:red; font-family:Georgia; font-size:2em;\">red.</span>`\n\nWill give you this output\n\n> Roses are [red.]{style=\"color:red; font-family:Georgia; font-size:2em;\"}\n\n**For coloured text blocks.**\n\n```r\n<style>\ndiv.blue { background-color:#e6f0ff; border-radius: 5px; padding: 20px;}\n</style>\n<div class = \"blue\">\n\n- This is my first conclusion\n- This is my second conclusion\n\n</div>\n```\n\n```r\n<style>\ndiv.blue { background-color:#e6f0ff; border-radius: 5px; padding: 20px;}\n</style>\n```\n\n::: blue\n-   This is my first conclusion\n-   This is my second conclusion\n:::\n\n[Custom Fonts in R Markdown PDF](https://community.rstudio.com/t/custom-fonts-in-rmarkdown-pdf/2098) [Font Formatting - coloring and emphasis](https://edpflager.com/?p=4002)\n\n## Hyperlinks\n\n**Underlink links in `PDF` documents** When you knit a document to PDF the hyperlinks are not underlined or colour, although they still work just fine. If you prefer to have your hyperlinks underlined as the following to the header section\n\n```yaml\nheader-includes:\n  - \\hypersetup{colorlinks=false,\n     allbordercolors={0 0 0},\n     pdfborderstyle={/S/U/W 1}}\n```\n\nAnother way is to use the following latex command, however this does not knit well to html. `[\\underline{R Markdown: The Definitive Guide}](https://bookdown.org/yihui/rmarkdown/)` will give the following: [R Markdown: The Definitive Guide](https://bookdown.org/yihui/rmarkdown/)\n\n## Images, Figures and videos\n\n[Tips and tricks for working with images and figures in R Markdown documents](http://zevross.com/blog/2017/06/19/tips-and-tricks-for-working-with-images-and-figures-in-r-markdown-documents/).\n\nSimple add for image\n\n```r\n![image caption](path/to/image.png)\n```\n\n### Videos\n\n**Embed video**\n\n`vebmedr` is a package that makes embedding video into Rmarkdown simple.\n\nInstall the package from CRAN: `install.packages(\"vembedr\")`.\n\n*Example*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"htmltools\")\nlibrary(\"vembedr\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nembed_url(\"https://www.youtube.com/watch?v=uV4UpCq2azs\")\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"vembedr\">\n<div>\n<iframe src=\"https://www.youtube.com/embed/uV4UpCq2azs\" width=\"533\" height=\"300\" frameborder=\"0\" allowfullscreen=\"\" data-external=\"1\"></iframe>\n</div>\n</div>\n```\n:::\n:::\n\n\n## Fun stuff\n\n### emojis\n\nYou can add emojis into Rmarkdown html docs with the following code: `:bowling:` which will give you this ðŸŽ³ A full list of emoji short cuts available [here](https://www.webfx.com/tools/emoji-cheat-sheet/).\n\nYou could also use unicode formatting - see [here](https://apps.timwhitlock.info/emoji/tables/unicode) for more info.\n\nYou can also use emojis in plotting, see [here](https://cran.r-project.org/web/packages/emojifont/vignettes/emojifont.html).\n\n### Icons\n\nDepending on the type of RMarkdown document you are working with (i.e. what are you \"knitting\" to), will depend on which code works for you. As always there is more than one way to this.\n\nTo start with the most commonly used icons are from `font awesome` suite - so [head here](https://fontawesome.com/icons?d=gallery&m=free) to pick your (*free*) icons.\n\n**HTML docs**\n\n```r\n<script src=\"https://unpkg.com/ionicons@5.0.0/dist/ionicons.js\"></script>\n```\n\nFor HTML docs (including webpages), I have found the following works best `<i class=\"fab fa-r-project\"></i>` this will give you a beautiful RStudio icon <i class=\"fab fa-r-project\"></i>.\n\nIf you want to use [`Ionicons`](https://ionicons.com/) then include you will first need to make sure the following line appears within your Rmarkdown doc (don't worry it wont appear in the knitted product) `<script src=\"https://unpkg.com/ionicons@5.0.0/dist/ionicons.js\"></script>`. Then use the following code to insert your icons, for example this `<ion-icon name=\"bug-outline\"></ion-icon>` produces a lovely bug for you <ion-icon name=\"bug\"></ion-icon>. You can customise the icons, [see here](https://ionicons.com/usage).\n\nThis code `<span class=\"badge badge-info\">Info</span>` will produce this badge [Info]{.badge .badge-info} in html document, more details found [here](https://getbootstrap.com/docs/4.0/components/badge/)\n\n**Webpages (HTML) - nav bar**\n\nYou can add icons to the navigation bar on your webpage, just like on this one. In the YAML doc add the following bit of code under the relevant section `icon: fa-icon` e.g. for the rstudio icon use `fa-r-project` for this icon <i class=\"fab fa-r-project\"></i>\n\n*Example* - partial YAML doc, for more info on RMarkdown webpages/YAML head to [RMarkdown Webpages](https://siobhon-egan.github.io/bioinfo-phylo/rmd-webpages.html) section\n\n```yaml\nnavbar:\n  title: \"Code\"\n  left:\n    - text: \"Home\"\n      href: index.html\n    - text: \"RStudio\"\n      icon: fa-file-alt\n```\n\n**PDF docs**\n\nWhen knitting to PDF I have found the easiest way using the [`icon` package](https://github.com/ropenscilabs/icon).\n\nInstall developer version from github: `devtools::install_github(\"ropenscilabs/icon\")`\n\n\nThen add the following bit of code in your RMarkdown document.\n\n```r\nlibrary(icon)\nicon::fa(\"rocket\") # equivalent to icon::fa_rocket()\n```\n\nand you'll get this ðŸš€ <i class=\"fas fa-rocket\"></i>. Got some extra tips and trick [see here](https://slides.mitchelloharawild.com/icon/#1).\n\nSome more info on `icon` available [here](https://ropensci.org/technotes/2018/05/15/icon/) and [here](https://slides.mitchelloharawild.com/icon/#1).\n\n### Buttons\n\nThe [`downloadthis`](https://github.com/fmmattioni/downloadthis) package is to implement download buttons in HTML outputs from RMarkdown without need for `runtime::shiny`\n\nInstall: `install.packages(\"downloadthis\")`\n\nThen add the following to your Rmarkdown document - this example will give you a red download button with a link to the `downloadthis` pdf manual (remember to hide the code so only the output appears using `{r echo=FALSE}` at the start of your code chunk).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(downloadthis)\ndownload_link(\n  link = \"https://github.com/fmmattioni/downloadthis/raw/master/inst/example/file_1.pdf\",\n  button_label = \"Download pdf file\",\n  button_type = \"danger\",\n  has_icon = TRUE,\n  icon = \"fa fa-save\",\n  self_contained = FALSE\n)\n```\n\n::: {.cell-output-display}\n```{=html}\n<a href=\"https://github.com/fmmattioni/downloadthis/raw/master/inst/example/file_1.pdf\">\n<button class=\"btn btn-danger\"><i class=\"fa fa-save\"></i> Download pdf file</button>\n</a>\n```\n:::\n:::\n\n\nThis code words when knitting to HTML, that opens a link when you click on it\n\n```r\n    <article>\n    <h3><a href=\"https://www.researchgate.net/publication/327174678_What's_in_a_tick_Meta-analysis_of_microbial_diversity_in_Australian_ticks\">Whatâ€™s in a tick? Meta-analysis of microbial diversity in Australian ticks</a></h3>\n    <div class=\"summary\">\n    <span><i class=\"fa fa-calendar\"></i> _2018-08_</span>\n    <p>Global Microbiome II 2018 (West Coast Microbiome Network) | Perth, Western Australia</p>\n    <a class=\"btn btn-outline-primary btn-sm\" href=\"https://www.researchgate.net/publication/327174678_What's_in_a_tick_Meta-analysis_of_microbial_diversity_in_Australian_ticks\" role=\"button\">Poster</a>\n    </div>\n```\n\n### Diagram\n\n[diagrams](https://mikeyharper.uk/flowcharts-in-r-using-diagrammer/)\n\n## Table\n\nIn additional to using basic RMarkdown syntax for tables\n\n```r\nFirst Header  | Second Header\n------------- | -------------\nContent Cell  | Content Cell\nContent Cell  | Content Cell\n```\n\nWhich look like this\n\n| First Header | Second Header |\n|--------------|---------------|\n| Content Cell | Content Cell  |\n| Content Cell | Content Cell  |\n\nYou can use [KableExtra](http://haozhu233.github.io/kableExtra/awesome_table_in_html.html)\n\n## Themes\n\n[RMarkdown theme gallery](https://www.datadreaming.org/post/r-markdown-theme-gallery/)\n\n## Headings and navigation\n\n[bookdown](https://bookdown.org/yihui/rmarkdown/html-document.html) includes tabbed sections\n\nThis code here will create headings with tabbed sections:\n\n```r\n### Quarterly Results {.tabset}\n\n#### By Product\n\nContent on tabbed section 1 here\n\n#### By Region\n\nMaybe insert a short list here:\n\n* item 1\n* item 2\n* item 3\n```\n\nIt will look like this:\n\n### Quarterly Results {.tabset}\n\n#### By Product\n\nContent on tabbed section 1 here\n\n#### By Region\n\nMaybe insert a short list here:\n\n-   item 1\n-   item 2\n-   item 3\n\n## Headings\n\nIn addition to info in the Rmarkdown page some extra bits.\n\nAdd sections to the book using the following at the start of a RMarkdown page\n\n```r\n# (PART) Section A {-}\n\n# Page 1\n```\n\nThis will section will appear until it recognises another section.\n\n### Call out note\n\n```r\n:::{.callout-note}\nNote that there are five types of callouts, including: \n`note`, `tip`, `warning`, `caution`, and `important`.\n:::\n```\n\nGives this:\n\n:::{.callout-note}\nNote that there are five types of callouts, including: \n`note`, `tip`, `warning`, `caution`, and `important`.\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/vembedr-0.1.5/css/vembedr.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/font-awesome-5.13.0/js/script.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}