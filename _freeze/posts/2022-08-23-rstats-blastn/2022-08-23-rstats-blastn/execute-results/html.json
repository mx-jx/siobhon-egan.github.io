{
  "hash": "213d6e14e4a7f5bad5a10e5f9a8fd9fc",
  "result": {
    "markdown": "---\ntitle: \"blastn output and R\"\ndescription: |\n Curating blastn output in R\nauthor: \"Siobhon Egan\"\ndate: \"2022-08-23\"\ncategories: [rstudio, rstats, genomics]\n---\n\n\n::: {.callout-note icon=false, collapse=flase}\nTaxonomy assignment by blasting the ASVs against the refseq 16S rRNA bacterial database. Example of simple sorting of top hit and retrieving taxonomy lineage information.\n:::\n\n>[`taxize`](https://docs.ropensci.org/taxize/) - allows users to search over many taxonomic data sources for species names (scientific and common) and download up and downstream taxonomic hierarchical information - among other things.\n\n## Example data\n\n*For this quick example I am using a small fasta file with just 10 ASV sequences*\n```\n>ASV01\nAGGGTTTGATCATGGCTCAGATTGAACGCTGGCGGCAGGCCTAACACATGCAAGTCGAGCGGATGAGTGGAGCTTGCTCC\nATGATTCAGCGGCGGACGGGTGAGTAATGCCTAGGAATCTGCCTGGTAGTGGGGGACAACGTTTCGAAAGGAACGCTAAT\nACCGCATACGTCCTACGGGAGAAAGCAGGGGACCTTCGGGCCTTGCGCTATCAGATGAGCCTAGGTCGGATTAGCTAGTA\nGGTGGGGTAAAGGCCCACCTAGGCGACGATCCGTAACTGG\n>ASV02\nAGAGTTTGATCATGGCTCAGATTGAACGCTGGCGGCAGGCCTAACACATGCAAGTCGAGCGGATGAGTGGAGCTTGCTCC\nATGATTCAGCGGCGGACGGGTGAGTAATGCCTAGGAATCTGCCTGGTAGTGGGGGACAACGTTTCGAAAGGAACGCTAAT\nACCGCATACGTCCTACGGGAGAAAGCAGGGGACCTTCGGGCCTTGCGCTATCAGATGAGCCTAGGTCGGATTAGCTAGTA\nGGTGGGGTAAAGGCCCACCTAGGCGACGATCCGTAACTGG\n>ASV03\nAGGGTTTGATCCTGGCTCAGATTGAACGCTGGCGGCAGGCCTAACACATGCAAGTCGAGCGGATGAGTGGAGCTTGCTCC\nATGATTCAGCGGCGGACGGGTGAGTAATGCCTAGGAATCTGCCTGGTAGTGGGGGACAACGTTTCGAAAGGAACGCTAAT\nACCGCATACGTCCTACGGGAGAAAGCAGGGGACCTTCGGGCCTTGCGCTATCAGATGAGCCTAGGTCGGATTAGCTAGTA\nGGTGGGGTAAAGGCCCACCTAGGCGACGATCCGTAACTGG\n>ASV04\nAGAGTTTGATCCTGGCTCAGATTGAACGCTGGCGGCAGGCCTAACACATGCAAGTCGAGCGGATGAGTGGAGCTTGCTCC\nATGATTCAGCGGCGGACGGGTGAGTAATGCCTAGGAATCTGCCTGGTAGTGGGGGACAACGTTTCGAAAGGAACGCTAAT\nACCGCATACGTCCTACGGGAGAAAGCAGGGGACCTTCGGGCCTTGCGCTATCAGATGAGCCTAGGTCGGATTAGCTAGTA\nGGTGGGGTAAAGGCCCACCTAGGCGACGATCCGTAACTGG\n>ASV05\nAGGGTTTGATCATGGCTCAGGATGAACGCTGGCGGCGTGCCTAATACATGCAAGTCGAGCGAATGGATTGAGAGCTTGCT\nCTCAAGAAGTTAGCGGCGGACGGGTGAGTAACACGTGGGTAACCTGCCCATAAGACTGGGATAACTCCGGGAAACCGGGG\nCTAATACCGGATAATATTTTGAACTGCATGGTTCGAAATTGAAAGGCGGCTTCGGCTGTCACTTATGGATGGACCCGCGT\nCGCATTAGCTAGTTGGTGAGGTAACGGCTCACCAAGGCAA\n>ASV06\nAGAGTTTGATCATGGCTCAGGATGAACGCTGGCGGCGTGCCTAATACATGCAAGTCGAGCGAATGGATTGAGAGCTTGCT\nCTCAAGAAGTTAGCGGCGGACGGGTGAGTAACACGTGGGTAACCTGCCCATAAGACTGGGATAACTCCGGGAAACCGGGG\nCTAATACCGGATAATATTTTGAACTGCATGGTTCGAAATTGAAAGGCGGCTTCGGCTGTCACTTATGGATGGACCCGCGT\nCGCATTAGCTAGTTGGTGAGGTAACGGCTCACCAAGGCAA\n>ASV07\nAGGGTTTGATCATGGCTCAGATTGAACGCTGGCGGCAGGCCTAACACATGCAAGTCGAGCGGATGAGAGGAGCTTGCTCC\nTTGATTTAGCGGCGGACGGGTGAGTAATGCCTAGGAATCTGCCTGGTAGTGGGGGATAACGTTCCGAAAGGAACGCTAAT\nACCGCATACGTCCTACGGGAGAAAGCAGGGGACCTTCGGGCCTTGCGCTATCAGATGAGCCTAGGTCGGATTAGCTAGTT\nGGTGAGGTAATGGCTCACCAAGGCGACGATCCGTAACTGG\n>ASV08\nAGGGTTTGATCCTGGCTCAGATTGAACGCTGGCGGCAGGCCTAACACATGCAAGTCGAGCGGATGAGAGGAGCTTGCTCC\nTTGATTTAGCGGCGGACGGGTGAGTAATGCCTAGGAATCTGCCTGGTAGTGGGGGATAACGTTCCGAAAGGAACGCTAAT\nACCGCATACGTCCTACGGGAGAAAGCAGGGGACCTTCGGGCCTTGCGCTATCAGATGAGCCTAGGTCGGATTAGCTAGTT\nGGTGAGGTAATGGCTCACCAAGGCGACGATCCGTAACTGG\n>ASV09\nAGGGTTTGATCATGGCTCAGGATGAACGCTGGCGGCGTGCCTAATACATGCAAGTCGAGCGAATGGATTGAGAGCTTGCT\nCTCAAGAAGTTAGCGGCGGACGGGTGAGTAACACGTGGGTAACCTGCCCATAAGACTGGGATAACTCCGGGAAACCGGGG\nCTAATACCGGATAACATTTTGAACTGCATGGTTCGAAATTGAAAGGCGGCTTCGGCTGTCACTTATGGATGGACCCGCGT\nCGCATTAGCTAGTTGGTGAGGTAACGGCTCACCAAGGCAA\n>ASV10\nAGGGTTTGATCCTGGCTCAGGATGAACGCTGGCGGCGTGCCTAATACATGCAAGTCGAGCGAATGGATTGAGAGCTTGCT\nCTCAAGAAGTTAGCGGCGGACGGGTGAGTAACACGTGGGTAACCTGCCCATAAGACTGGGATAACTCCGGGAAACCGGGG\nCTAATACCGGATAATATTTTGAACTGCATGGTTCGAAATTGAAAGGCGGCTTCGGCTGTCACTTATGGATGGACCCGCGT\nCGCATTAGCTAGTTGGTGAGGTAACGGCTCACCAAGGCAA\n```\n\n## Load library\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#devtools::install_github(\"ropensci/taxize\")\nlibrary('taxize')\n```\n:::\n\n\n## Perform blastn \n\nThis next line of code is using commmand line blast. A search is performed of the target fasta file against the refseq 16S ribosomal RNA data base. We select the output format `-6`.\n\n::: {.callout-warning icon=false, collapse=true}\nNote to self: make quick tutorial on setting up command line blast and using common common ncbi databases.\n:::\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nblastn -db ~/db/16S_ribosomal_RNA_BLAST/16S_ribosomal_RNA -query asvs_small.fasta -out blastn_16SrRNA_small.txt -outfmt 6\n```\n:::\n\n\n## Read the blastn output back into R\n\nNow read in text file and give headers\n\n::: {.cell}\n\n```{.r .cell-code}\nblastn_taxa <- read.table(\"blastn_16SrRNA_small.txt\", sep = \"\\t\", header = FALSE)\n\nblastn_fmt6 <-\n  c(\n    \"qseqid\",\n    \"sseqid\",\n    \"pident\",\n    \"length\",\n    \"mismatch\",\n    \"gapopen\",\n    \"qstart\",\n    \"qend\",\n    \"sstart\",\n    \"send\",\n    \"evalue\",\n    \"bitscore\"\n  )\ncolnames(blastn_taxa) <- blastn_fmt6\n```\n:::\n\n\n## Order table and select just the top hit.\n\nThen we get order using the table by query sequence and evalue (where we sort by lowest e-value).\n\nYou can change this to pident to get the highest sequence similarity (but make sure you sort by having largest values at the top).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nblastn_taxa_sort <- data.table::setorder(blastn_taxa, qseqid, -evalue)\n\nblastn_taxa_top <- blastn_taxa_sort[match(unique(blastn_taxa_sort$qseqid), blastn_taxa_sort$qseqid),]\n```\n:::\n\n\n## Retrieve the genbank ID and lineage information\n\nNow we use the `genbank2uid` function to get the accession number. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# get vector of unique accession numbers\nunique_sseqid <- unique(blastn_taxa_top$sseqid)\n\n# search for these in the ncbi database\nncbi_lineage <- classification(genbank2uid(id = unique_sseqid), db = 'ncbi')\n\n# merge output into a data frame\nncbi_lineage_df <-cbind(ncbi_lineage)\nncbi_lineage_df$sseqid <- unique_sseqid\n\n# select just which lineage level to keep\nncbi_lineage_df <- dplyr::select(ncbi_lineage_df, sseqid, query, superkingdom, phylum, class, order, family, genus, species)\n```\n:::\n\n\nCheck we have matches with all queries we put in and then join blast top hit table with lineage\n\n::: {.cell}\n\n```{.r .cell-code}\nidx <- which(blastn_taxa_top$sseqid %in% ncbi_lineage_df$sseqid)\n\nblastn_taxa_top_lineage <-\n  blastn_taxa_top |> dplyr::left_join(ncbi_lineage_df,\n                                by = \"sseqid\")\n```\n:::\n\n\n**Now let's inspect our beautiful output**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDT::datatable(blastn_taxa_top_lineage)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-adadec4e477fbc40272d\" style=\"width:100%;height:auto;\" class=\"datatables html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-adadec4e477fbc40272d\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\"],[\"ASV01\",\"ASV02\",\"ASV03\",\"ASV04\",\"ASV05\",\"ASV06\",\"ASV07\",\"ASV08\",\"ASV09\",\"ASV10\"],[\"NR_133773.1\",\"NR_102802.1\",\"NR_133773.1\",\"NR_151928.1\",\"NR_125634.1\",\"NR_125634.1\",\"NR_109730.1\",\"NR_109730.1\",\"NR_125634.1\",\"NR_125634.1\"],[84.27,83.448,84.27,83.448,97.561,97.561,86.166,86.166,97.561,97.561],[267,290,267,290,41,41,253,253,41,41],[36,34,36,34,1,1,31,31,1,1],[6,13,6,13,0,0,4,4,0,0],[20,1,20,1,21,21,21,21,21,21],[280,280,280,280,61,61,271,271,61,61],[1,8,1,6,1,1,1,1,1,1],[267,293,267,291,41,41,251,251,41,41],[7.25e-68,2.01e-68,7.25e-68,2.01e-68,2.82e-12,2.82e-12,2.59e-72,2.59e-72,2.82e-12,2.82e-12],[255,257,255,257,71.3,71.3,270,270,71.3,71.3],[\"1247514\",\"693216\",\"1247514\",\"1755811\",\"1229268\",\"1229268\",\"1268273\",\"1268273\",\"1229268\",\"1229268\"],[\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\"],[\"Proteobacteria\",\"Proteobacteria\",\"Proteobacteria\",\"Proteobacteria\",\"Firmicutes\",\"Firmicutes\",\"Proteobacteria\",\"Proteobacteria\",\"Firmicutes\",\"Firmicutes\"],[\"Gammaproteobacteria\",\"Gammaproteobacteria\",\"Gammaproteobacteria\",\"Gammaproteobacteria\",\"Bacilli\",\"Bacilli\",\"Gammaproteobacteria\",\"Gammaproteobacteria\",\"Bacilli\",\"Bacilli\"],[\"Xanthomonadales\",\"Enterobacterales\",\"Xanthomonadales\",\"Vibrionales\",\"Bacillales\",\"Bacillales\",\"Moraxellales\",\"Moraxellales\",\"Bacillales\",\"Bacillales\"],[\"Xanthomonadaceae\",\"Enterobacteriaceae\",\"Xanthomonadaceae\",\"Vibrionaceae\",\"Bacillaceae\",\"Bacillaceae\",\"Moraxellaceae\",\"Moraxellaceae\",\"Bacillaceae\",\"Bacillaceae\"],[\"Luteimonas\",\"Cronobacter\",\"Luteimonas\",\"Paraphotobacterium\",\"Salinibacillus\",\"Salinibacillus\",\"Paraperlucidibaca\",\"Paraperlucidibaca\",\"Salinibacillus\",\"Salinibacillus\"],[\"Luteimonas abyssi\",\"Cronobacter turicensis\",\"Luteimonas abyssi\",\"Paraphotobacterium marinum\",\"Salinibacillus xinjiangensis\",\"Salinibacillus xinjiangensis\",\"Paraperlucidibaca wandonensis\",\"Paraperlucidibaca wandonensis\",\"Salinibacillus xinjiangensis\",\"Salinibacillus xinjiangensis\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>qseqid<\\/th>\\n      <th>sseqid<\\/th>\\n      <th>pident<\\/th>\\n      <th>length<\\/th>\\n      <th>mismatch<\\/th>\\n      <th>gapopen<\\/th>\\n      <th>qstart<\\/th>\\n      <th>qend<\\/th>\\n      <th>sstart<\\/th>\\n      <th>send<\\/th>\\n      <th>evalue<\\/th>\\n      <th>bitscore<\\/th>\\n      <th>query<\\/th>\\n      <th>superkingdom<\\/th>\\n      <th>phylum<\\/th>\\n      <th>class<\\/th>\\n      <th>order<\\/th>\\n      <th>family<\\/th>\\n      <th>genus<\\/th>\\n      <th>species<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[3,4,5,6,7,8,9,10,11,12]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.5.4/htmlwidgets.js\"></script>\n<link href=\"../../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/datatables-binding-0.23/datatables.js\"></script>\n<script src=\"../../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../../site_libs/dt-core-1.11.3/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"../../site_libs/dt-core-1.11.3/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/dt-core-1.11.3/js/jquery.dataTables.min.js\"></script>\n<link href=\"../../site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}