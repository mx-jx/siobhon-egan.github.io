{
  "hash": "b4dbb017fdb7acbf041faf02bdb5f9c9",
  "result": {
    "markdown": "---\ntitle: \"GitHub notes\"\ndescription: |\n  Notes for simple use of GitHub.\nauthor: \"Siobhon Egan\"\ndate: \"2021-07-30\"\ncategories:\n  - git\n  - code\n---\n\n\n\n\n# GitHub\n\n[Getting started on sharing code]{.badge .badge-info}\n\n[GitHub](https://github.com/) - provides hosting for software development version control using Git. It the industry standard, universal platform to share code and collaborate on projects. GitHub offers plans free of charge but you can also upgrade for extra storage and other special features if you need.\n\nOffical GitHub links\n\n-   [GitHub Help](https://help.github.com/en)\n    -   [Quick Start](https://help.github.com/en/github/getting-started-with-github/quickstart)\n-   [Documenting your projects on GitHub](https://guides.github.com/features/wikis/)\n\nGitHub and RStudio\n\n-   [Happy Git and GitHub for the useR](https://happygitwithr.com/)\n\nI **highly** recommend doing the [GitHub lesson](http://swcarpentry.github.io/git-novice/) on software carpentry\n\n## Useful bits\n\nHelp:  `git --help`\n\nInitalize a repo: `git init`\n\nShow status of a repo: `git status`\n\nAdd all files to the staging area: `git addd .`\n\nAdd only certain files to staging area: `git add filename.txt`\n\nSave the staged content as a new commit into the local repo: `git commit -m \"message here\"`\n\nCopy changes from a local repository to a remote repository: `git push` or `git push origin master` \n\nCopy changes from a remote repository to a local repository: `git pull` or `git pull origin master`\n\nCloning a repo - make a local copy of a repository: `git clone https://github.com/repo/name.git ~/Path/here`\n\n### Workflow for pushing new repo to github\n\nQuick guide for making a new repository on local machine and pushing it to GitHub.\n\nOn local machine\n\n```bash\nmkdir directory\ncd directory\ntouch README.md\ngit init\n```\n\nOn GitHub make a new repo with the same filename - make sure you create an empty repository.\nCopy the https link to clip board and go back to terminal on local machine\n\n```bash\ngit remote add origin https://github.com/siobhon-egan/repository.git\ngit remote -v\ngit add .\ngit commit -m \"first commit\"\ngit push origin master\n```\n\n### Workflow for pulling existing github repo\n\nQuick guide for pulling an existing repo from GitHub to local machine.\n\nOn local machine\n\n```bash\nmkdir directory\ncd directory\ngit init\n```\n\nOn GitHub the existing repository in this case is called **directory**.\nCopy the https link to clip board and go back to terminal on local machine\n\n```bash\ngit remote add origin https://github.com/siobhon-egan/repository.git\ngit remote -v\ngit pull origin master\n```\n\n## Git ignore\n\nSome handy git-related functions available in the [usethis](https://usethis.r-lib.org/reference/index.html#section-git-and-github) package.\\\nIn particular `git_vaccinate()` adds *'.Rproj.user', '.Rhistory', '.Rdata', '.httr-oauth', '.DS_Store'* to your `.gitignore` file.\n\nIt might be handy to made a global `.gitignore` file to make sure you always ignore certain files (e.g. the `.DS_Store`)\n\n```bash\n# make a global .gitignore file\necho .DS_Store >> ~/.gitignore_global\n# configure to use this file for all of your repositories\ngit config --global core.excludesfile ~/.gitignore_global\n```\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}